
---
 src/ap/ap_drv_ops.c       |  3 +++
 src/drivers/driver_wext.c | 19 ++++++++++++++++++-
 wpa_supplicant/ap.c       |  8 ++++++++
 3 files changed, 29 insertions(+), 1 deletion(-)

diff --git a/src/ap/ap_drv_ops.c b/src/ap/ap_drv_ops.c
index e917736..8455bef 100644
--- a/src/ap/ap_drv_ops.c
+++ b/src/ap/ap_drv_ops.c
@@ -554,6 +554,9 @@ int hostapd_set_freq(struct hostapd_data *hapd, enum hostapd_hw_mode mode,
 	struct hostapd_freq_params data;
 	struct hostapd_hw_modes *cmode = hapd->iface->current_mode;
 
+       if (cmode == NULL)
+                return 0;
+
 	if (hostapd_set_freq_params(&data, mode, freq, channel, edmg,
 				    edmg_channel, ht_enabled,
 				    vht_enabled, he_enabled, sec_channel_offset,
diff --git a/src/drivers/driver_wext.c b/src/drivers/driver_wext.c
index 0f0ad1f..27b429e 100644
--- a/src/drivers/driver_wext.c
+++ b/src/drivers/driver_wext.c
@@ -1654,6 +1654,9 @@ static int wpa_driver_wext_get_range(void *priv)
 		if (range->enc_capa & IW_ENC_CAPA_4WAY_HANDSHAKE)
 			drv->capa.flags |= WPA_DRIVER_FLAGS_4WAY_HANDSHAKE_PSK |
 				WPA_DRIVER_FLAGS_4WAY_HANDSHAKE_8021X;
+
+               drv->capa.flags |= WPA_DRIVER_FLAGS_AP;
+
 		drv->capa.auth = WPA_DRIVER_AUTH_OPEN |
 			WPA_DRIVER_AUTH_SHARED |
 			WPA_DRIVER_AUTH_LEAP;
@@ -2260,7 +2263,21 @@ int wpa_driver_wext_set_mode(void *priv, int mode)
 	struct wpa_driver_wext_data *drv = priv;
 	struct iwreq iwr;
 	int ret = -1;
-	unsigned int new_mode = mode ? IW_MODE_ADHOC : IW_MODE_INFRA;
+	unsigned int new_mode;
+
+       switch (mode) {
+       case 2://WPAS_MODE_AP:
+               new_mode = IW_MODE_MASTER;
+               break;
+
+       case 0://WPAS_MODE_INFRA:
+               new_mode = IW_MODE_INFRA;
+               break;
+
+       default:
+               new_mode = IW_MODE_ADHOC;
+               break;
+       }
 
 	os_memset(&iwr, 0, sizeof(iwr));
 	os_strlcpy(iwr.ifr_name, drv->ifname, IFNAMSIZ);
diff --git a/wpa_supplicant/ap.c b/wpa_supplicant/ap.c
index 6a0a69e..572e47a 100644
--- a/wpa_supplicant/ap.c
+++ b/wpa_supplicant/ap.c
@@ -1008,6 +1008,14 @@ int wpa_supplicant_create_ap(struct wpa_supplicant *wpa_s,
 	else
 		wpa_drv_get_ext_capa(wpa_s, WPA_IF_AP_BSS);
 
+       if ((wpa_s->drv_flags & WPA_DRIVER_FLAGS_4WAY_HANDSHAKE_PSK) &&
+           (params.key_mgmt_suite == WPA_KEY_MGMT_PSK ||
+            params.key_mgmt_suite == WPA_KEY_MGMT_FT_PSK)) {
+               params.passphrase = ssid->passphrase;
+               if (ssid->psk_set)
+                       params.psk = ssid->psk;
+       }
+
 	if (wpa_drv_associate(wpa_s, &params) < 0) {
 		wpa_msg(wpa_s, MSG_INFO, "Failed to start AP functionality");
 		return -1;
-- 
2.17.1

