--- a/ntpd/ntp_config.c	
+++ b/ntpd/ntp_config.c
@@ -1744,11 +1744,6 @@ config_auth(
 	ntp_u_int16_t	u;
 	struct attr_val *my_val;
 #ifdef OPENSSL
-#ifndef NO_INTRES
-	u_char		digest[EVP_MAX_MD_SIZE];
-	u_int		digest_len;
-	EVP_MD_CTX	ctx;
-#endif
 	int		item;
 #endif
 
@@ -1847,39 +1842,6 @@ config_auth(
 	if (ptree->auth.revoke)
 		sys_revoke = ptree->auth.revoke;
 #endif /* OPENSSL */
-
-#ifndef NO_INTRES
-	/* find a keyid */
-	if (info_auth_keyid == 0)
-		req_keyid = 65535;
-	else
-		req_keyid = info_auth_keyid;
-
-	/* if doesn't exist, make up one at random */
-	if (authhavekey(req_keyid)) {
-		req_keytype = cache_type;
-#ifndef OPENSSL
-		req_hashlen = 16;
-#else	/* OPENSSL follows */
-		EVP_DigestInit(&ctx, EVP_get_digestbynid(req_keytype));
-		EVP_DigestFinal(&ctx, digest, &digest_len);
-		req_hashlen = digest_len;
-#endif
-	} else {
-		int	rankey;
-
-		rankey = ntp_random();
-		req_keytype = NID_md5;
-		req_hashlen = 16;
-		MD5auth_setkey(req_keyid, req_keytype,
-		    (u_char *)&rankey, sizeof(rankey));
-		authtrust(req_keyid, 1);
-	}
-
-	/* save keyid so we will accept config requests with it */
-	info_auth_keyid = req_keyid;
-#endif /* !NO_INTRES */
-
 }
 
 
