A function named copy_file_range function is declared in the <unistd.h> header
of newer versions of the GNU C Library, when -D_GNU_SOURCE is used to
request all GNU extensions.

e2fsprogs defines a function which has this same mane, resulting
in a clash which fails the build.

Index: git/misc/create_inode.c
===================================================================
--- git.orig/misc/create_inode.c
+++ git/misc/create_inode.c
@@ -392,9 +392,9 @@ static ssize_t my_pread(int fd, void *bu
 }
 #endif /* !defined HAVE_PREAD64 && !defined HAVE_PREAD */
 
-static errcode_t copy_file_range(ext2_filsys fs, int fd, ext2_file_t e2_file,
-				 off_t start, off_t end, char *buf,
-				 char *zerobuf)
+static errcode_t copy_file_extent(ext2_filsys fs, int fd, ext2_file_t e2_file,
+				  off_t start, off_t end, char *buf,
+				  char *zerobuf)
 {
 	off_t off, bpos;
 	ssize_t got, blen;
@@ -466,8 +466,8 @@ static errcode_t try_lseek_copy(ext2_fil
 
 		data_blk = data & ~(fs->blocksize - 1);
 		hole_blk = (hole + (fs->blocksize - 1)) & ~(fs->blocksize - 1);
-		err = copy_file_range(fs, fd, e2_file, data_blk, hole_blk, buf,
-				      zerobuf);
+		err = copy_file_extent(fs, fd, e2_file, data_blk, hole_blk, buf,
+				       zerobuf);
 		if (err)
 			return err;
 
@@ -518,9 +518,9 @@ static errcode_t try_fiemap_copy(ext2_fi
 		}
 		for (i = 0, ext = ext_buf; i < fiemap_buf->fm_mapped_extents;
 		     i++, ext++) {
-			err = copy_file_range(fs, fd, e2_file, ext->fe_logical,
-					      ext->fe_logical + ext->fe_length,
-					      buf, zerobuf);
+			err = copy_file_extent(fs, fd, e2_file, ext->fe_logical,
+					       ext->fe_logical + ext->fe_length,
+					       buf, zerobuf);
 			if (err)
 				goto out;
 		}
@@ -569,8 +569,8 @@ static errcode_t copy_file(ext2_filsys f
 	if (err != EXT2_ET_UNIMPLEMENTED)
 		goto out;
 
-	err = copy_file_range(fs, fd, e2_file, 0, statbuf->st_size, buf,
-			      zerobuf);
+	err = copy_file_extent(fs, fd, e2_file, 0, statbuf->st_size, buf,
+			       zerobuf);
 out:
 	ext2fs_free_mem(&zerobuf);
 	ext2fs_free_mem(&buf);
