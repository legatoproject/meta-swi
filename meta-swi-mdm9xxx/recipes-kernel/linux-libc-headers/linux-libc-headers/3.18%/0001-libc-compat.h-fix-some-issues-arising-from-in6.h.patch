From 2872f5d8bcef84e62b15b37ba4ffeccfb6402dad Mon Sep 17 00:00:00 2001
From: rofl0r <retnyg@gmx.net>
Date: Wed, 22 Jan 2014 00:48:28 +0100
Subject: [PATCH 1/3] libc-compat.h: fix some issues arising from in6.h

namely redefinition of some structs provided by netinet/in.h.

Note: Modified for support backport to linux_libc_headers_3.18.131, to
match the linux_quic_3.18.131. This is for building kernel 3.18.131
with Yocto 2.5, which has a preferred libc header of 4.15.x

---
Signed-off-by: Khem Raj <raj.khem@gmail.com>
Modified-by: Steven MacDonald <smacdonald@sierrawireless.com>
Upstream-Status: Submitted

 include/uapi/linux/libc-compat.h | 25 ++++++++-----------------
 1 file changed, 8 insertions(+), 17 deletions(-)

Index: linux-3.18.131/include/uapi/linux/libc-compat.h
===================================================================
--- linux-3.18.131.orig/include/uapi/linux/libc-compat.h
+++ linux-3.18.131/include/uapi/linux/libc-compat.h
@@ -48,33 +48,24 @@
 #ifndef _UAPI_LIBC_COMPAT_H
 #define _UAPI_LIBC_COMPAT_H
 
-/* We have included glibc headers... */
-#if defined(__GLIBC__)
+#ifndef __KERNEL__ /* we're used from userspace */
 
-/* Coordinate with glibc netinet/in.h header. */
-#if defined(_NETINET_IN_H)
+/* Coordinate with libc net/if.h header. */
+#if defined(_NET_IF_H)
 
-/* GLIBC headers included first so don't define anything
+/* LIBC headers included first so don't define anything
  * that would already be defined. */
 #define __UAPI_DEF_IN6_ADDR		0
-/* The exception is the in6_addr macros which must be defined
- * if the glibc code didn't define them. This guard matches
- * the guard in glibc/inet/netinet/in.h which defines the
- * additional in6_addr macros e.g. s6_addr16, and s6_addr32. */
-#if defined(__USE_MISC) || defined (__USE_GNU)
 #define __UAPI_DEF_IN6_ADDR_ALT		0
-#else
-#define __UAPI_DEF_IN6_ADDR_ALT		1
-#endif
 #define __UAPI_DEF_SOCKADDR_IN6		0
 #define __UAPI_DEF_IPV6_MREQ		0
 #define __UAPI_DEF_IPPROTO_V6		0
 #define __UAPI_DEF_IPV6_OPTIONS		0
 
-#else
+#else /* defined(_NETINET_IN_H) */
 
 /* Linux headers included first, and we must define everything
- * we need. The expectation is that glibc will check the
+ * we need. The expectation is that libc will check the
  * __UAPI_DEF_* defines and adjust appropriately. */
 #define __UAPI_DEF_IN6_ADDR		1
 /* We unconditionally define the in6_addr macros and glibc must
@@ -97,7 +88,7 @@
 /* If we did not see any headers from any supported C libraries,
  * or we are being included in the kernel, then define everything
  * that we need. */
-#else /* !defined(__GLIBC__) */
+#else /* __KERNEL__ */
 
 /* Definitions for in6.h */
 #define __UAPI_DEF_IN6_ADDR		1
@@ -110,6 +101,6 @@
 /* Definitions for xattr.h */
 #define __UAPI_DEF_XATTR		1
 
-#endif /* __GLIBC__ */
+#endif /* __KERNEL__ */
 
 #endif /* _UAPI_LIBC_COMPAT_H */
