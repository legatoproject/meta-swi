diff --git a/Makefile.am b/Makefile.am
index f674869..4f2d7b9 100644
--- a/Makefile.am
+++ b/Makefile.am
@@ -1,4 +1,4 @@
 lib_LTLIBRARIES = libhardware.la
 libhardware_la_SOURCES = hardware.c
 libhardware_la_CFLAGS = -Iinclude -DLINUX_ENABLED
-libhardware_la_LDFLAGS = -lcutils -llog
+libhardware_la_LDFLAGS = -lcutils -llog -ldl
diff --git a/hardware.c b/hardware.c
index 5cdd936..bbaa9e4 100644
--- a/hardware.c
+++ b/hardware.c
@@ -23,6 +23,7 @@
 #include <pthread.h>
 #include <errno.h>
 #include <limits.h>
+#include <stdio.h>

 #define LOG_TAG "HAL"
 #include <cutils/log.h>
@@ -35,6 +36,17 @@
 #endif
 #define HAL_LIBRARY_PATH2 "/vendor/lib/hw"

+#define LOG_INFO " I"
+#define LOG_WARN " W"
+#define LOG_ERROR " E"
+#define LOG_DEBUG " D"
+#define LOG_VERBOSE " V"
+#define ALOG(pri, tag, fmt, arg...) fprintf(stderr, tag pri": " fmt"\n", ##arg)
+#define ALOGI(fmt, arg...) ALOG(LOG_INFO, LOG_TAG, fmt, ##arg)
+#define ALOGW(fmt, arg...) ALOG(LOG_WARN, LOG_TAG, fmt, ##arg)
+#define ALOGE(fmt, arg...) ALOG(LOG_ERROR, LOG_TAG, fmt, ##arg)
+#define ALOGV(fmt, arg...) ALOG(LOG_VERBOSE, LOG_TAG, fmt, ##arg)
+
 /**
  * There are a set of variant filename for modules. The form of the filename
  * is "<MODULE_ID>.variant.so" so for the led module the Dream variants 
@@ -137,6 +149,7 @@ int hw_get_module_by_class(const char *class_id, const char *inst,
         snprintf(name, PATH_MAX, "%s.%s", class_id, inst);
     else
         strlcpy(name, class_id, PATH_MAX);
+    ALOGV("name = %s", name);

     /*
      * Here we rely on the fact that calling dlopen multiple times on
@@ -167,7 +180,11 @@ int hw_get_module_by_class(const char *class_id, const char *inst,
                      HAL_LIBRARY_PATH1, name, prop);
             if (access(path, R_OK) == 0) break;
         } else {
-            snprintf(path, sizeof(path), "%s/%s.default.so",
+            if (!strcmp(name, "bluetooth"))
+                snprintf(path, sizeof(path), "%s/lib%sdefault.so.0",
+                     HAL_LIBRARY_PATH1, name);
+            else
+                snprintf(path, sizeof(path), "%s/%s.default.so",
                      HAL_LIBRARY_PATH1, name);
             if (access(path, R_OK) == 0) break;
         }
@@ -177,9 +194,11 @@ int hw_get_module_by_class(const char *class_id, const char *inst,
     if (i < HAL_VARIANT_KEYS_COUNT+1) {
         /* load the module, if this fails, we're doomed, and we should not try
          * to load a different variant. */
+        ALOGV("loading path = %s", path);
         status = load(class_id, path, module);
     }

+    ALOGV("hw_get_module_by_class returning %d", status);
     return status;
 }

--
2.5.0

